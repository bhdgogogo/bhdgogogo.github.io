(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{445:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"单线程的js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单线程的js"}},[t._v("#")]),t._v(" 单线程的JS")]),t._v(" "),s("p",[s("code",[t._v("JS")]),t._v("最大的特点就是单线程，这无须再多说了，我们要知道的是，为什么"),s("code",[t._v("JS")]),t._v("要设计成单线程的，多线程不是更符合现实场景么？")]),t._v(" "),s("p",[t._v("因为这跟"),s("code",[t._v("JS")]),t._v("的用途有关，作为浏览器脚本语言，"),s("code",[t._v("JavaScript")]),t._v("的主要用途是与用户互动，以及操作"),s("code",[t._v("DOM")]),t._v("。这就决定了"),s("code",[t._v("JS")]),t._v("只能是单线程，否则会代理很复杂的同步问题")]),t._v(" "),s("p",[t._v("想象一个场景，在一个线程里，用户点击了一个"),s("code",[t._v("button")]),t._v("按钮，按钮事件正在触发的时候，另一个线程删除了这个"),s("code",[t._v("button")]),t._v("，那这时，浏览器到底要以哪个操作为主呢？")]),t._v(" "),s("p",[t._v("所以，为了避免这种复杂性，从一诞生，"),s("code",[t._v("JS")]),t._v("就是单线程，这已经成了这门语言的核心特征，永远也不会改变")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("为了利用多核CPU的计算能力，"),s("code",[t._v("ES6")]),t._v("提出"),s("code",[t._v("Web Worker")]),t._v("标准，允许"),s("code",[t._v("JavaScript")]),t._v("脚本创建多个线程，"),s("strong",[t._v("但是子线程完全受主线程控制，且不得操作"),s("code",[t._v("DOM")])]),t._v("。所以，这个新标准并没有改变"),s("code",[t._v("JavaScript")]),t._v("单线程的本质。")])]),s("h2",{attrs:{id:"js的特色-任务队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js的特色-任务队列"}},[t._v("#")]),t._v(" JS的特色 —— 任务队列")]),t._v(" "),s("p",[t._v("也可以叫做"),s("strong",[t._v("消息队列("),s("code",[t._v("event queue")]),t._v(")")])]),t._v(" "),s("p",[t._v("单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务还没结束，后一个任务就得一直等待...")]),t._v(" "),s("p",[t._v("这种一直等待的现象会造成时间资源的浪费，所以"),s("code",[t._v("JS")]),t._v("的设计者提出了一种思想，可以先挂起处于等待中的任务，先执行后面的任务，等待的任务返回来结果后，再回过头，把等待的任务继续执行下去（这种思想的实现就是借助了任务队列）")]),t._v(" "),s("p",[t._v("任务分成两类👇")]),t._v(" "),s("ul",[s("li",[t._v("同步任务 ("),s("code",[t._v("synchronous")]),t._v(") —— 在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务")]),t._v(" "),s("li",[t._v("异步任务("),s("code",[t._v("asynchronous")]),t._v(") —— 不"),s("strong",[t._v("立即")]),t._v("进入主线程、而进入"),s("strong",[t._v("任务队列")]),t._v(" ("),s("code",[t._v("task queue")]),t._v(")的任务，只有当"),s("strong",[t._v("任务队列")]),t._v("通知主线程，某个异步任务可以执行了，该异步任务才会进入主线程执行")])]),t._v(" "),s("p",[t._v("简单来描述"),s("code",[t._v("JS")]),t._v("的"),s("strong",[t._v("异步执行机制")]),t._v("就是")]),t._v(" "),s("ol",[s("li",[t._v("所有同步任务都在主线程上执行，形成一个执行栈（"),s("code",[t._v("execution context stack")]),t._v("）")]),t._v(" "),s("li",[t._v("如果存在异步任务，"),s("strong",[t._v("只要当异步任务有了运行结果")]),t._v('，就在"任务队列"之中放置一个事件，开始等待执行栈调用')]),t._v(" "),s("li",[t._v("一旦"),s("strong",[t._v("执行栈")]),t._v('中的所有同步任务执行完毕，系统就会读取"任务队列"，任务队列里对应的异步任务，就会结束等待状态，进入执行栈，开始执行')]),t._v(" "),s("li",[t._v("上面的过程会不断重复循环 —— "),s("code",[t._v("event loop")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("任务队列是先进先出的，只要执行栈一清空，"),s("strong",[t._v("任务队列")]),t._v("上第一位的事件就自动进入主线程")]),t._v(" "),s("p",[t._v("但是，由于"),s("code",[t._v("JS")]),t._v("中存在定时器，所以主线程首先要检查一下执行时间，某些事件只有到了规定的时间，才能返回主线程")])]),s("h2",{attrs:{id:"回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数"}},[t._v("#")]),t._v(" 回调函数")]),t._v(" "),s("p",[s("strong",[t._v("任务队列")]),t._v("中的事件，除了"),s("code",[t._v("IO")]),t._v("设备的事件以外，还包括一些用户操作的事件（比如鼠标点击、页面滚动等等）。只要指定过"),s("strong",[t._v("回调函数")]),t._v('，这些事件发生时就会进入"任务队列"，等待主线程读取')]),t._v(" "),s("p",[t._v('所谓"回调函数"（'),s("code",[t._v("callback")]),t._v("），就是那些会被主线程挂起来的代码。"),s("strong",[t._v("异步任务必须指定回调函数，当主线程开始执行异步任务，就是执行对应的回调函数 ! ! !")])]),t._v(" "),s("p",[t._v("甚至你可以想象成，异步任务是把他们的回调放到了任务队列里")]),t._v(" "),s("h2",{attrs:{id:"定时器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[t._v("#")]),t._v(" 定时器")]),t._v(" "),s("p",[t._v("定时器也是"),s("code",[t._v("JS")]),t._v("一个很有特色的东西，它也是会被放到任务队列中的")]),t._v(" "),s("p",[t._v("定时器功能主要由"),s("code",[t._v("setTimeout()")]),t._v("和"),s("code",[t._v("setInterval()")]),t._v("这两个函数来完成，它们的内部运行机制完全一样，区别在于前者指定的代码是一次性执行，后者则为反复执行")]),t._v(" "),s("p",[t._v("看一个例子就行👇")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面这行代码的执行结果是"),s("code",[t._v("1 3 2 4")])]),t._v(" "),s("p",[s("code",[t._v("console.log()")]),t._v("会直接放到执行栈中运行（它也是"),s("code",[t._v("JS")]),t._v("最优先的函数），所以会先顺序输出1 3，然后是第一个定时器，两秒后执行，第二个定时器，一秒后执行，，此时要注意，"),s("strong",[t._v("虽然第二个定时器放在了第一个定时器后面，但是它的定时时间到了之后，就会放入任务队列，此时执行栈为空，所以输出2，第一个定时器的执行时间还没到，所以它现在还没有放在任务队列里，直到它的执行时间到了，才会放入任务队列中，等待调用 —— 异步任务有了返回结果之后，才会放入消息队列中，等待调用")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[s("code",[t._v("ES6")]),t._v("规定了"),s("code",[t._v("setTimeout()")]),t._v("的第二个参数的最小值（最短间隔），不得低于4毫秒，如果低于这个值，就会自动增加")]),t._v(" "),s("p",[t._v("同时，对于那些DOM的操作，涉及到重绘的，通常也不会立即执行，是每16毫秒执行一次 —— 这时使用"),s("code",[t._v("requestAnimationFrame()")]),t._v("的效果要好于"),s("code",[t._v("setTimeout()")])])]),s("p",[t._v("需要注意的是，"),s("code",[t._v("setTimeout()")]),t._v('只是将事件插入了"任务队列"，'),s("strong",[t._v("必须等到当前代码（执行栈）执行完（空闲时），主线程才会去执行它指定的回调函数")])]),t._v(" "),s("p",[t._v("所谓空闲的时候是指的是当前引擎"),s("strong",[t._v("执行的语句块上下文执行完毕时")]),t._v("的正要执行下一个语句块时的状态")]),t._v(" "),s("p",[t._v("要是当前代码耗时很长，有可能要等很久，所以并没有办法保证，回调函数一定会在"),s("code",[t._v("setTimeout()")]),t._v("指定的时间执行")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("比如上面☝️这个例子，如果执行栈里面有一个死循环，那此时还在任务队列里的内容是永远不会执行的 —— 两个定时器都永远不会执行了")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"}),s("p",[t._v("在这里可能会有一个疑问？")]),t._v(" "),s("p",[t._v("既然JS是单线程的，那么是谁来监督定时器的执行时间呢？")]),t._v(" "),s("p",[t._v("是浏览器，"),s("code",[t._v("JS")]),t._v('是单线程的，但浏览器是多线程的，当浏览器监控到"事件池"状态更新时会通知改变'),s("code",[t._v("JS")]),t._v("引擎 这时候"),s("code",[t._v("JS")]),t._v('引擎会在空闲的时候停下来去执行"事件池"里面的回调')])]),s("p",[t._v("关于"),s("code",[t._v("JS")]),t._v("执行机制的初始介绍到这里就差不多了，此时你应该理解了一些"),s("code",[t._v("JS")]),t._v("的代码是怎么运行的，那关于"),s("code",[t._v("JS")]),t._v("执行机制里最重要的部分 ——"),s("code",[t._v("event loop")]),t._v(" ，请点"),s("a",{attrs:{href:""}},[t._v("这里")]),t._v("😄")])])}),[],!1,null,null,null);s.default=e.exports}}]);