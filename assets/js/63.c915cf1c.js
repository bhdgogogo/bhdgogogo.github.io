(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{490:function(v,e,t){"use strict";t.r(e);var _=t(1),a=Object(_.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模板"}},[v._v("#")]),v._v(" 模板")]),v._v(" "),e("p",[v._v("定义模板的方式有三种")]),v._v(" "),e("ol",[e("li",[v._v("在组件中通过"),e("code",[v._v("template")]),v._v("属性去指定")]),v._v(" "),e("li",[v._v("直接在网页的根元素中指定（如果直接将模板定义到网页中，此时模板必须符合"),e("code",[v._v("html")]),v._v("的规范）")]),v._v(" "),e("li",[v._v("组件中通过"),e("code",[v._v("render()")]),v._v("直接渲染 (一般不用，有点像"),e("code",[v._v("react")]),v._v(")")])]),v._v(" "),e("blockquote",[e("p",[v._v("如果在组件中定义"),e("code",[v._v("template")]),v._v("，则会优先使用"),e("code",[v._v("template")]),v._v("作为模板，\n同时根元素中的所有内容，都会被替换\n如果在组件中没有定义"),e("code",[v._v("template")]),v._v("，则会使用根元素的"),e("code",[v._v("innerHTML")]),v._v("作为模板使用")])]),v._v(" "),e("h2",{attrs:{id:"使用vite管理vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用vite管理vue"}},[v._v("#")]),v._v(" 使用"),e("code",[v._v("vite")]),v._v("管理"),e("code",[v._v("vue")])]),v._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("yarn")]),v._v(" init "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[v._v("-y")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("yarn")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("add")]),v._v(" vite "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[v._v("-D")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("yarn")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("add")]),v._v(" vue\n")])])]),e("ul",[e("li",[v._v("新建一个"),e("code",[v._v("index.html")]),v._v("文件，入口文件，项目执行会优先执行这个文件")]),v._v(" "),e("li",[v._v("新建"),e("code",[v._v("src")]),v._v("文件夹，在"),e("code",[v._v("src")]),v._v("文件夹里新建一个"),e("code",[v._v("index.js")]),v._v("文件，"),e("code",[v._v("vue")]),v._v("在这里工作")]),v._v(" "),e("li",[v._v("在"),e("code",[v._v("html")]),v._v("文件中通过模块化引入"),e("code",[v._v("index.js")]),v._v("文件"),e("br"),v._v("\n此时，一个"),e("code",[v._v("vite + vue")]),v._v("项目基本结构就完成了")])]),v._v(" "),e("blockquote",[e("p",[v._v("使用构建工具引入vue，默认不支持通过template属性来设置模板")])]),v._v(" "),e("h2",{attrs:{id:"vue组件化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue组件化"}},[v._v("#")]),v._v(" vue组件化")]),v._v(" "),e("p",[v._v("组件化 —— 想在哪儿使用就在哪儿使用")]),v._v(" "),e("ol",[e("li",[v._v("新建一个"),e("code",[v._v("xxx.js")]),v._v("文件，该文件就是一个子组件")]),v._v(" "),e("li",[v._v("在"),e("code",[v._v("index.js")]),v._v("中引入子组件")]),v._v(" "),e("li",[v._v("在根组件中注册子组件")])]),v._v(" "),e("p",[v._v("组件实例之间是相互独立的")]),v._v(" "),e("blockquote",[e("p",[v._v("注意： 模板如果写在"),e("code",[v._v("html")]),v._v("里的话，那模板名称都要写成小写，对应的根组件中的"),e("code",[v._v("components")]),v._v("中子组件的名称也要设置为小写名称")])]),v._v(" "),e("h2",{attrs:{id:"单文件组件化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单文件组件化"}},[v._v("#")]),v._v(" 单文件组件化")]),v._v(" "),e("p",[e("code",[v._v("template")]),v._v("是用字符串的形式在编写模板")]),v._v(" "),e("ol",[e("li",[v._v("这些字符串会在项目运行时，在浏览器中被编译为"),e("code",[v._v("js")]),v._v("的函数，也就是说这个工作是在浏览器中进行的，所以性能较差")]),v._v(" "),e("li",[v._v("在字符串中编写代码，体验很差（没有代码提示）")])]),v._v(" "),e("blockquote",[e("p",[v._v("为了解决这个问题，"),e("code",[v._v("vue")]),v._v("为我们提供了一种单文件组件（"),e("code",[v._v("SFC")]),v._v("）—— "),e("code",[v._v("Single-File Component")]),v._v("\n也就是"),e("code",[v._v("vue")]),v._v("文件\n"),e("code",[v._v("vue")]),v._v("文件本身并不能被浏览器编译，所以要用构建工具打包\n同时"),e("code",[v._v("vue")]),v._v("文件在打包时，构建工具会直接将"),e("code",[v._v("template")]),v._v("转换为函数，就无需让浏览器去编译了，这样一来性能也会有所提升")])]),v._v(" "),e("p",[v._v("需要安装"),e("code",[v._v("@vitejs/plugin-vue")]),v._v("依赖，来解析"),e("code",[v._v("vue")]),v._v("文件，也就是把"),e("code",[v._v("vue")]),v._v("文件打包"),e("br"),v._v("\n同时要配置"),e("code",[v._v("vite.config.js")]),v._v("文件，基本配置内容如下")]),v._v(" "),e("div",{staticClass:"language-javaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("import")]),v._v(" vue "),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"@vitejs/plugin-vue"')]),v._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("export")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("default")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("plugins")]),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n\n")])])]),e("h2",{attrs:{id:"杂"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#杂"}},[v._v("#")]),v._v(" 杂")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("mount")]),v._v("的返回值是根组件的实例")]),v._v(" "),e("li",[v._v("响应式数据 —— 变量和"),e("code",[v._v("DOM")]),v._v("关联起来")]),v._v(" "),e("li",[v._v("在"),e("code",[v._v("vue3")]),v._v("中所有定义组件的方法都一样")])])])}),[],!1,null,null,null);e.default=a.exports}}]);