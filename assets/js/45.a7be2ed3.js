(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{476:function(e,t,a){"use strict";a.r(t);var r=a(1),v=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"v8是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8是什么"}},[e._v("#")]),e._v(" V8是什么?")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("V8")]),e._v(" 是 "),t("code",[e._v("Google")]),e._v(" 开源的 "),t("code",[e._v("JavaScript")]),e._v(" 引擎。可以理解为："),t("code",[e._v("V8")]),e._v(" 将程序员写的代码，最终解析成机器码能够让计算机识别。其中的具体操作，就是"),t("code",[e._v("V8")]),e._v(" 干的事。")]),e._v(" "),t("li",[e._v("我们可以把 "),t("code",[e._v("V8")]),e._v(" 看成一个黑盒， 程序语言进去，通过黑盒子的处理，经过一系列操作后，解析成机器码。")]),e._v(" "),t("li",[e._v("了解"),t("code",[e._v("V8")]),e._v("，对于性能优化的思考会有更多理解和方向。能够更轻松理解"),t("code",[e._v("babel")]),e._v("语法分析原理，"),t("code",[e._v("eslint")]),e._v("语法检查机制，前端框架的底层实现。")])]),e._v(" "),t("blockquote",[t("p",[t("strong",[t("code",[e._v("V8")]),e._v("被广泛用于各种"),t("code",[e._v("JavaScript")]),e._v("执行环境")])])]),e._v(" "),t("h2",{attrs:{id:"v8的发展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8的发展"}},[e._v("#")]),e._v(" V8的发展")]),e._v(" "),t("h2",{attrs:{id:"v8引擎的运行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎的运行过程"}},[e._v("#")]),e._v(" V8引擎的运行过程")]),e._v(" "),t("h2",{attrs:{id:"v8的解析过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8的解析过程"}},[e._v("#")]),e._v(" V8的解析过程")]),e._v(" "),t("p",[e._v("【在vscode里面安装】用npm命令安装readline-sync模块实现用户键盘输入")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qq_36545813/article/details/124181624?spm=1001.2101.3001.6650.6&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-6-124181624-blog-123105147.235%5Ev32%5Epc_relevant_default_base3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-6-124181624-blog-123105147.235%5Ev32%5Epc_relevant_default_base3&utm_relevant_index=13",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/drowsyelf/article/details/129385841",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qq_37512471/article/details/129801185",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://ui.dev/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript?spm=ata.13261165.0.0.2d8e16798YR8lw",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("我们要从解释代码的角度来思考，也就是从引擎的角度\n将代码分成几部分，来处理解释代码的复杂性 —— 分成的这些部分就被称为执行上下文")]),e._v(" "),t("p",[e._v("执行上下文就相当于编写代码时的函数、模块，包这些，用来处理复杂性")]),e._v(" "),t("p",[e._v("全局执行上下文\n它是JS引擎运行代码时创建的第一个执行上下文")]),e._v(" "),t("p",[e._v("这个全局执行上下文包括两部分 —— 一个全局对象 window （global object）和一个this(this指向的就是window)\n如果在浏览器中运行 JavaScript 或在 Node 环境中运行代码，this将引用全局对象。window global")])])}),[],!1,null,null,null);t.default=v.exports}}]);