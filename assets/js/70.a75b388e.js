(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{506:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入"}},[t._v("#")]),t._v(" 依赖注入")]),t._v(" "),s("p",[t._v("场景：属性透传在很多层结构的组件中用起来是很不方便的")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("通过依赖注入，可以跨域多层组件向其他的组件传递数据")]),t._v(" —— 前提组件之间一定是父子关系")])]),t._v(" "),s("p",[t._v("步骤：")]),t._v(" "),s("ol",[s("li",[t._v("设置依赖（"),s("code",[t._v("provide")]),t._v("） "),s("code",[t._v("provide(name, value)")]),t._v(" —— 名值对")]),t._v(" "),s("li",[t._v("注入数据 （"),s("code",[t._v("inject")]),t._v("） "),s("code",[t._v("const value = inject(name, default)")])])]),t._v(" "),s("p",[t._v("子组件读取父组件设置的"),s("code",[t._v("Provide")]),t._v("数据")]),t._v(" "),s("p",[t._v("取谁？ —— 谁近取谁的 —— 类似于"),s("code",[t._v("JS")]),t._v("的作用域")]),t._v(" "),s("blockquote",[s("p",[t._v("如果是一层结构的话，那用什么都可以，比如"),s("code",[t._v("props")]),t._v(", "),s("code",[t._v("emits")]),t._v("，如果层级很多，好几层的结点，使用依赖注入就方便的多了")])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"title"}),s("p",[s("code",[t._v("inject")]),t._v(" 如果用解构对象的方式来接收数据的话，那解构的变量名要与"),s("code",[t._v("provide")]),t._v("中设置的对象名一致。")])]),s("h2",{attrs:{id:"状态管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),s("p",[t._v("状态（"),s("code",[t._v("state")]),t._v("）\n"),s("strong",[t._v("应用中的数据就是状态")])]),t._v(" "),s("ul",[s("li",[t._v("状态提升 —— 实现兄弟组件或者没有关系的组件数据共享")]),t._v(" "),s("li",[s("code",[t._v("store")]),t._v(" —— 存储"),s("code",[t._v("state")]),t._v("内容 —— 中央仓库 —— 存储公共状态")])]),t._v(" "),s("blockquote",[s("p",[t._v("优点：不再限制数据（状态）必须在哪儿定义，等于单独把这个状态抽象出来了，在哪儿用就引用该文件即可")])]),t._v(" "),s("h3",{attrs:{id:"pinia"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pinia"}},[t._v("#")]),t._v(" Pinia")]),t._v(" "),s("p",[s("strong",[t._v("是 vue 自带的一个插件")]),t._v(" "),s("a",{attrs:{href:"https://pinia.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),s("OutboundLink")],1),t._v(" "),s("code",[t._v("Pinia")]),t._v("就是一个状态管理库，实现了服务器渲染支持和"),s("code",[t._v("HMR")]),t._v("，而且有更强的团队协作约定，由"),s("code",[t._v("Vue")]),t._v(" 核心团队维护，对 "),s("code",[t._v("vue2")]),t._v(" 和 "),s("code",[t._v("vue3")]),t._v("都可以使用")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("pinia")]),t._v("/的步骤")]),t._v(" "),s("ol",[s("li",[t._v("安装"),s("code",[t._v("pinia")])]),t._v(" "),s("li",[t._v("在"),s("code",[t._v("main.js")]),t._v("中引入"),s("code",[t._v("createPinia()")])]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("createPinia()")]),t._v("创建"),s("code",[t._v("pinia")]),t._v("实例")]),t._v(" "),s("li",[t._v("将"),s("code",[t._v("pinia")]),t._v("配置为"),s("code",[t._v("vue")]),t._v("的插件 —— "),s("code",[t._v("app.use(pinia)")])])]),t._v(" "),s("h3",{attrs:{id:"store"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#store"}},[t._v("#")]),t._v(" store")]),t._v(" "),s("p",[t._v("useXxx —— 钩子函数"),s("br"),t._v(" "),s("strong",[t._v("把其他组件或者插件中的变量，对象，函数钩到我们当前组件中，从而让我们使用")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("比如"),s("code",[t._v("defineStore")]),t._v("，它本身是一个函数，我们调用"),s("code",[t._v("defineStore()")]),t._v("，它会返回一个函数，我们用"),s("code",[t._v("useXxx")]),t._v("的形式来接收这个函数，用的时候直接去调用"),s("code",[t._v("useXxx")]),t._v("就可以访问"),s("code",[t._v("store")]),t._v("中的内容，"),s("code",[t._v("useXxx")]),t._v("就是一个钩子")])]),s("p",[s("code",[t._v("pinia")]),t._v("管理的"),s("code",[t._v("store")]),t._v("的基本结构如下")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入函数 defineStore()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" defineStore "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pinia"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过函数来创建store —— useCountStore是一个函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// defineStore("store的id", 配置对象) —— 返回的是一个函数')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置对象：state，是一个函数，将需要由pinia维护的数据以对象的形式返回")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" useCountStore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineStore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：state是个函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"猪八戒"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("getters")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("actions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("组合式"),s("code",[t._v("store")]),t._v("类似于组合式"),s("code",[t._v("api")]),t._v(" —— ("),s("code",[t._v("setup")]),t._v(")的写法 —— 这里就不重复记录了")]),t._v(" "),s("p",[s("code",[t._v("store")]),t._v("实例本身就是一个"),s("code",[t._v("reactive")]),t._v("对象，可以通过它直接访问"),s("code",[t._v("state")]),t._v("中的数据，但是如果直接将"),s("code",[t._v("state")]),t._v("中数据解构出来，那么数据将会丧失响应性")]),t._v(" "),s("p",[s("strong",[t._v("解决")]),t._v("：可以通过"),s("code",[t._v("storeToRefs()")]),t._v("来对"),s("code",[t._v("store")]),t._v("进行解构，")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[s("code",[t._v("storeToRefs()")]),t._v("可以将"),s("code",[t._v("state")]),t._v("和"),s("code",[t._v("getters")]),t._v("中的属性解构为"),s("code",[t._v("ref")]),t._v("属性，从而保留其响应性\n但不适用于"),s("code",[t._v("action")]),t._v("属性")])]),s("p",[s("code",[t._v("state")]),t._v("的修改：")]),t._v(" "),s("ol",[s("li",[t._v("直接修改")]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("$patch")]),t._v("（补丁）")]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("$patch")]),t._v("传函数的形式的修改")]),t._v(" "),s("li",[t._v("直接替换"),s("code",[t._v("state")]),t._v(" ——"),s("code",[t._v("$state")])]),t._v(" "),s("li",[t._v("重置"),s("code",[t._v("state")]),t._v(" —— "),s("code",[t._v("$reset")])])]),t._v(" "),s("blockquote",[s("p",[t._v("什么是补丁 —— 同时修改多个属性")])]),t._v(" "),s("p",[s("code",[t._v("store")]),t._v("的订阅 —— 当"),s("code",[t._v("state")]),t._v("发生变化时，进行一些操作 —— 监听 —— "),s("code",[t._v("$subscribe")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("stuStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("mutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mutation 表示修改的信息")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象，包含修改前后内容的对比")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改方式的类型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(mutation.events[0] === mutation.events[1])")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(mutation.payload)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if(state.token){")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     // 登录，向本地存储中添加内容")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }else{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     // 登出，从本地存储中移除内容")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// console.log("state发生变化了", state)')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用订阅时不要在回调函数中直接修改state")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state.age++")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("detached")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("action")]),t._v("的订阅 —— "),s("code",[t._v("$onAction")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("stuStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$onAction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" after"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onError "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n        name 调用的action的名字\n        store store的实例\n        args action接收到的参数\n        after() 可以设置一个回调函数，函数会在action成功调用后触发\n        onError() 可以设置一个回调函数，函数会在action调用失败后触发\n    */")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("after")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成功执行！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"执行失败！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"杂"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#杂"}},[t._v("#")]),t._v(" 杂")]),t._v(" "),s("p",[t._v("为什么要打包？")]),t._v(" "),s("ol",[s("li",[t._v("页面多次请求 —— 页面只请求一次，请求一个文件，然后在文件中相互引用")]),t._v(" "),s("li",[t._v("编译 —— "),s("code",[t._v("ES6")]),t._v(","),s("code",[t._v("sass")]),t._v(" 等高级语法转换为兼容性更强的语法")])]),t._v(" "),s("p",[s("code",[t._v("@")]),t._v("表示是组件的根目录")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HTML5")]),t._v("中，"),s("code",[t._v("ID")]),t._v("可以以数字开头")]),t._v(" "),s("p",[s("code",[t._v("rem")]),t._v("替换像素 —— 实现移动端的适配")])])}),[],!1,null,null,null);s.default=e.exports}}]);