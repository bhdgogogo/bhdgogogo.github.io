(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{447:function(v,_,e){"use strict";e.r(_);var t=e(1),a=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"}),_("p",[v._v("在平常写代码的时候，一直搞混 "),_("code",[v._v("null")]),v._v(" 和 "),_("code",[v._v("undefined")]),v._v(" 的概念，所以还是写一篇来记录一下吧~")])]),_("h2",{attrs:{id:"mdn给的定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mdn给的定义"}},[v._v("#")]),v._v(" MDN给的定义")]),v._v(" "),_("h3",{attrs:{id:"null"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[v._v("#")]),v._v(" "),_("strong",[v._v("null")])]),v._v(" "),_("p",[v._v("值 "),_("code",[v._v("null")]),v._v(" 是一个字面量 —— 是 "),_("code",[v._v("JS")]),v._v(" 的基本数据类型，它不是全局对象的一个属性。"),_("code",[v._v("null")]),v._v(" 表示缺少的标识，指示变量未指向任何对象。把 "),_("code",[v._v("null")]),v._v(" 作为尚未创建的对象，也许更好理解")]),v._v(" "),_("p",[v._v("直接记录重点👇")]),v._v(" "),_("ul",[_("li",[v._v("声明式 —— 代表了空值")]),v._v(" "),_("li",[_("strong",[v._v("这个值有定义，但没有指向任何内存中的任何对象")])])]),v._v(" "),_("h3",{attrs:{id:"undefined"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[v._v("#")]),v._v(" "),_("strong",[v._v("undefined")])]),v._v(" "),_("p",[_("code",[v._v("undefined")]),v._v(" 是 全局对象 的一个属性。也就是说，它是全局作用域的一个变量。 undefined 的最初值就是原始数据类型 undefined 。")]),v._v(" "),_("p",[v._v("重点 👇")]),v._v(" "),_("ul",[_("li",[v._v("隐藏式 —— 代表了空值")]),v._v(" "),_("li",[_("strong",[v._v("这个值没有定义")])])]),v._v(" "),_("p",[v._v("这里放一张经典的照片吧~")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/bhdgogogo/cloud-img/img/blogImg/f3e3a5fc4ee658ca16d23d4ab4067b6.png",alt:"1"}})]),v._v(" "),_("h2",{attrs:{id:"易错点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#易错点"}},[v._v("#")]),v._v(" 易错点")]),v._v(" "),_("h3",{attrs:{id:"typeof-null-为什么是-object"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#typeof-null-为什么是-object"}},[v._v("#")]),v._v(" 1️⃣ typeof null 为什么是 object ?")]),v._v(" "),_("div",{staticClass:"language-javascript extra-class"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[v._v("console"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("typeof")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("null")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// object")]),v._v("\n")])])]),_("p",[v._v("上面这行代码的结果是 "),_("code",[v._v("object")]),v._v("，所以 "),_("code",[v._v("object")]),v._v(" 是对象么？")]),v._v(" "),_("p",[v._v("答案肯定是否，"),_("code",[v._v("null")]),v._v(" 是 "),_("code",[v._v("Javascript")]),v._v(" 里的一种基本类型，其它几种基本类型还有 "),_("code",[v._v("string")]),v._v("，"),_("code",[v._v("number")]),v._v(" 等，而 "),_("code",[v._v("object")]),v._v(" 是引用类型，也称为对象类型")]),v._v(" "),_("p",[v._v("之所以会出现这个结果，是因为 "),_("code",[v._v("typeof")]),v._v(" 判断基于的是底层，"),_("code",[v._v("JS")]),v._v(" 中不同的数据类型在底层都表示为二进制 👇")]),v._v(" "),_("ul",[_("li",[v._v("000 —— 对象，数据是对象的引用")]),v._v(" "),_("li",[v._v("1 —— 整型，数据是 31 位带符号整数")]),v._v(" "),_("li",[v._v("010  —— 双精度类型，数据是双精度数字")]),v._v(" "),_("li",[v._v("100 —— 字符串，数据是字符串")]),v._v(" "),_("li",[v._v("110 —— 布尔类型，数据是布尔值")])]),v._v(" "),_("p",[v._v("可以看到二进制的前三位为 "),_("code",[v._v("0")]),v._v(" 会被 "),_("code",[v._v("typeof")]),v._v(" 判定为 "),_("code",[v._v("object")]),v._v(" 类型。")]),v._v(" "),_("p",[v._v("上面说了 "),_("code",[v._v("null")]),v._v(" 是个空值，二进制表示全是 "),_("code",[v._v("0")]),v._v("，所以 "),_("code",[v._v("typeof")]),v._v(" 看到前三位是 "),_("code",[v._v("0")]),v._v(" 之后，就会将其判断为 "),_("code",[v._v("object")]),v._v(" 返回")]),v._v(" "),_("blockquote",[_("p",[v._v("所以想要判断数据类型还是使用 "),_("code",[v._v("Object.prototype.toString.call()")]),v._v(" 吧")])]),v._v(" "),_("h3",{attrs:{id:"为什么-和-对比会出现-true-和-false"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么-和-对比会出现-true-和-false"}},[v._v("#")]),v._v(" 2️⃣ 为什么 == 和 === 对比会出现 true 和 false ？")]),v._v(" "),_("p",[_("code",[v._v("ECMA")]),v._v(" 上是这么写的👇")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("If x is null and y is undefined, return true.")])]),v._v(" "),_("li",[_("code",[v._v("If x is undefined and y is null, return true.")])])]),v._v(" "),_("p",[v._v("因为 "),_("code",[v._v("===")]),v._v(" 的是强等，它的比较规则如下")]),v._v(" "),_("ol",[_("li",[v._v("如果类型不同，那就直接返回 "),_("code",[v._v("false")])]),v._v(" "),_("li",[v._v("如果类型相同，则进行值比较，如果值不同就是 "),_("code",[v._v("false")]),v._v("，如果值相同则 "),_("code",[v._v("true")])]),v._v(" "),_("li",[v._v("特殊情况 —— "),_("code",[v._v("NaN")]),v._v(" 互相比较或者有一个是 "),_("code",[v._v("NaN")]),v._v(" 时，则返回 "),_("code",[v._v("false")])])]),v._v(" "),_("p",[v._v("而 "),_("code",[v._v("==")]),v._v(" 是弱等，它的比较规则如下")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("如果两个值类型相同，进行 "),_("code",[v._v("===")]),v._v(" 比较，比较规则同上")])]),v._v(" "),_("li",[_("p",[v._v("如果两个值类型不同，他们可能相等。根据下面规则进行类型转换再比较👇")])]),v._v(" "),_("li",[_("p",[v._v("如果一个是 "),_("code",[v._v("null")]),v._v("、一个是 "),_("code",[v._v("undefined")]),v._v(" ，那么相等。")])]),v._v(" "),_("li",[_("p",[v._v("如果一个是字符串，一个是数值，把字符串转换成数值再进行比较。")])]),v._v(" "),_("li",[_("p",[v._v("如果任一值是 "),_("code",[v._v("true")]),v._v("，把它转换成 "),_("code",[v._v("1")]),v._v(" 再比较；如果任一值是 "),_("code",[v._v("false")]),v._v("，把它转换成 "),_("code",[v._v("0")]),v._v(" 再比较。")])]),v._v(" "),_("li",[_("p",[v._v("如果一个是对象，另一个是数值或字符串，把对象转换成基础类型的值再比较。对象转换成基础类型，利用它的 "),_("code",[v._v("toString")]),v._v(" 或者"),_("code",[v._v("valueOf")]),v._v("方法。")])])]),v._v(" "),_("h3",{attrs:{id:"为什么-null-1-和-undefined-1-表现不同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么-null-1-和-undefined-1-表现不同"}},[v._v("#")]),v._v(" 3️⃣ 为什么 null + 1 和 undefined + 1 表现不同？")]),v._v(" "),_("p",[v._v("这就涉及到 "),_("code",[v._v("JS")]),v._v(" 中的隐式类型转换 —— "),_("code",[v._v("JS")]),v._v(" 的一个设计模式，在执行 加法运算 前，隐式类型转换会尝试将表达式中的变量转换为 "),_("strong",[_("code",[v._v("number")])]),v._v(" 类型")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("null")]),v._v(" 转化为 "),_("code",[v._v("number")]),v._v(" 时，会转换成 "),_("code",[v._v("0")])]),v._v(" "),_("li",[_("code",[v._v("undefined")]),v._v(" 转换为 "),_("code",[v._v("number")]),v._v(" 时，会转换为 "),_("code",[v._v("NaN")])])]),v._v(" "),_("p",[v._v("所以 "),_("code",[v._v("null + 1")]),v._v(" 的结果为 "),_("code",[v._v("1")]),v._v("，"),_("code",[v._v("undefined + 1")]),v._v(" 的结果是 "),_("code",[v._v("NaN")])]),v._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("建议在日常开发中使用 "),_("code",[v._v("null")]),v._v(" 来返回空的情况，而不要不写返回值或返回 "),_("code",[v._v("undefined")])]),v._v(" "),_("p",[v._v("而且在使用 "),_("code",[v._v("undefined")]),v._v(" 时， 建议也不要使用下面这种方式")]),v._v(" "),_("div",{staticClass:"language-javascript extra-class"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("let")]),v._v(" a "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("undefined")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])]),_("p",[v._v("⭐️ 使用 "),_("code",[v._v("void")]),v._v(" 这个 "),_("code",[v._v("API")])]),v._v(" "),_("div",{staticClass:"language-javascript extra-class"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("let")]),v._v(" a "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("void")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[v._v("0")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])])])}),[],!1,null,null,null);_.default=a.exports}}]);